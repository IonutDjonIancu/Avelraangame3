@model CharacterVm

@* Character/DetailsOf *@
<div class="row">
    <div class="col-8">
        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
            <a type="button" class="btn btn-outline-dark" asp-controller="Character" asp-action="Upload">Upload</a>
            <a type="button" class="btn btn-outline-dark" asp-controller="Character" asp-action="Create">Create</a>
            <a type="button" class="btn btn-outline-secondary" asp-controller="Character" asp-action="Details">Details</a>
        </div>
    </div>
    <div class="col-4">
        <div id="spinner" class="spinner-grow text-secondary float-end" role="status" title="Loading...">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

@* Stats and assets *@
<div class="container mt-3 footer-border">
    <div class="row mt-3">
        <div class="col-2">
            <p class="mb-0">Character</p>
            <ul>
                @if(Model.Details.IsLocked)
                {
                    <li>
                        <span class="text-red">character locked</span>
                    </li>
                }
                <li>
                    name: <span class="text-muted">@Model.Details.Name</span>
                </li>
                <li>
                    race: <span class="text-muted">@Model.Details.Race</span>
                </li>
                 <li>
                    culture: <span class="text-muted">@Model.Details.Culture</span>
                </li>
                <li>
                    specialization: <span class="text-muted">@Model.Details.Spec</span>
                </li>
                <li>
                    entity level: <span class="text-muted">@Model.Details.Entitylevel</span>
                </li>
                @if (Model.Details.Levelup > 0)
                {
                    <li>
                        level up pts.: <span class="text-green">@Model.Details.Levelup</span>
                    </li>
                }
                else
                {
                    <li>
                        level up pts.: <span class="text-muted">@Model.Details.Levelup</span>
                    </li>
                }
                <li>
                    wealth: <span class="text-muted">@Model.Details.Wealth</span>
                </li>
                <li>
                    worth: <span class="text-muted">@Model.Details.Worth</span>
                </li>
            </ul>
        </div>
        <div class="col-2">
            <p class="mb-0">Portrait</p>
            <img class="rounded-3 mt-3 ms-4 pointer" src="@Model.Details.Portrait" width="60" height="80" title="this is how your character will look on the battleboard"/>
        </div>
        @* Stats *@
        <div class="col-2">
            <p class="mb-0">Stats</p>
            <ul>
                <li>
                    @if (Model.Details.Levelup > 0) { <button onclick="levelup('Strength')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button> } 
                    strength: 
                    <span class="text-muted">@Model.Actuals.Stats.Strength</span>
                </li>
                <li>
                    <button onclick="levelup('Athletics')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    athletics: 
                    <span class="text-muted">@Model.Actuals.Stats.Athletics</span>
                </li>
                <li>
                    <button onclick="levelup('Willpower')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    willpower: 
                    <span class="text-muted">@Model.Actuals.Stats.Willpower</span>
                </li>
                <li>
                    <button onclick="levelup('Abstract')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    abstract: 
                    <span class="text-muted">@Model.Actuals.Stats.Abstract</span>
                </li>
                <li>
                    <button onclick="levelup('Harm')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    harm: 
                    <span class="text-muted">@Model.Actuals.Stats.Harm</span>
                </li>
                 <li>
                    <button onclick="levelup('Fortitude')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    fortitude: 
                    <span class="text-muted">@Model.Actuals.Stats.Fortitude</span>
                </li>
                 <li>
                    <button onclick="levelup('Accretion')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    accretion: 
                    <span class="text-muted">@Model.Actuals.Stats.Accretion</span>
                </li>
                <li>
                    <button onclick="levelup('Guile')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    guile: 
                    <span class="text-muted">@Model.Actuals.Stats.Guile</span>
                </li>
            </ul>
        </div>
        <div class="col-2">
            <p class="mb-0">Stats (continued)</p>
            <ul>
                <li>
                    <button onclick="levelup('Awareness')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    awareness: 
                    <span class="text-muted">@Model.Actuals.Stats.Awareness</span>
                </li>
                <li>
                    <button onclick="levelup('Charm')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    charm: 
                    <span class="text-muted">@Model.Actuals.Stats.Charm</span>
                </li>
                <li>
                    <button onclick="levelup('Apcom')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    apcom: 
                    <span class="text-muted">@Model.Actuals.Stats.Apcom</span>
                </li>
                <li>
                    <button onclick="levelup('Defense')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    defense: 
                    <span class="text-muted">@Model.Actuals.Stats.Defense</span> %
                </li>
                <li>
                    <button onclick="levelup('Resist')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    resist: 
                    <span class="text-muted">@Model.Actuals.Stats.Resist</span> %
                </li>
                <li>
                    <button onclick="levelup('Hitpoints')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    hitpoints: 
                    <span class="text-muted">@Model.Actuals.Stats.Hitpoints</span>
                </li>
                <li>
                    <button onclick="levelup('Mana')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    mana: 
                    <span class="text-muted">@Model.Actuals.Stats.Mana</span>
                </li>
            </ul>
        </div>
        @* Crafts *@
        <div class="col-2">
            <p class="mb-0">Crafts</p>
            <ul>
                <li>
                    <button onclick="levelup('Combat')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    combat: 
                    <span class="text-muted">@Model.Actuals.Crafts.Combat</span>
                </li>
                <li>
                    <button onclick="levelup('Arcane')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    arcane: 
                    <span class="text-muted">@Model.Actuals.Crafts.Arcane</span>
                </li>
                <li>
                    <button onclick="levelup('Alchemy')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    alchemy: 
                    <span class="text-muted">@Model.Actuals.Crafts.Alchemy</span>
                </li>
                <li>
                    <button onclick="levelup('Psionics')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    psionics: 
                    <span class="text-muted">@Model.Actuals.Crafts.Psionics</span>
                </li>
                <li>
                    <button onclick="levelup('Hunting')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    hunting: 
                    <span class="text-muted">@Model.Actuals.Crafts.Hunting</span>
                </li>
                <li>
                    <button onclick="levelup('Advocacy')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    advocacy: 
                    <span class="text-muted">@Model.Actuals.Crafts.Advocacy</span>
                </li>
                <li>
                    <button onclick="levelup('Mercantile')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    mercantile: 
                    <span class="text-muted">@Model.Actuals.Crafts.Mercantile</span>
                </li>
                <li>
                    <button onclick="levelup('Tactics')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    tactics: 
                    <span class="text-muted">@Model.Actuals.Crafts.Tactics</span>
                </li>
            </ul>
        </div>
        <div class="col-2">
            <p class="mb-0">Crafts (continued)</p>
            <ul>
                <li>
                    <button onclick="levelup('Traveling')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    traveling: 
                    <span class="text-muted">@Model.Actuals.Crafts.Traveling</span>
                </li>
                <li>
                    <button onclick="levelup('Sailing')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    sailing: 
                    <span class="text-muted">@Model.Actuals.Crafts.Sailing</span>
                </li>
                <li>
                    <button onclick="levelup('Medicine')" class="btn btn-outline-dark py-0 px-1" style="opacity: 0.3">+</button>
                    medicine: 
                    <span class="text-muted">@Model.Actuals.Crafts.Medicine</span>
                </li>
            </ul>
        </div>
    </div>
</div>

@* Items *@
<div class="container mt-3 footer-border">
    @* Item actions *@
    <div id="inventoryActions" class="btn-group btn-group-sm pt-3" role="group" style="display:none">
        <button onclick="equipItem()" id="equipAction" type="button" class="btn btn-outline-dark actions secondary-darkgreen" style="display:none">&#8592; equip</button>
        <button onclick="unequipItem()" id="unequipAction" type="button" class="btn btn-outline-dark actions secondary-darkyellow" style="display:none">unequip &#8594;</button>
        <button onclick="sellItem()" id="sellAction" type="button" class="btn btn-outline-dark actions" style="display:none">sell &#8605;</button>
        <button onclick="hideInventoryActions()" title="hide actions" type="button" class="btn btn-outline-dark actions secondary-darkred">&#10008;</button>
    </div>
    <div class="row mt-3">
        @* Inventory *@
        <div class="col-3">
            <p class="mb-2">Inventory</p>
            @foreach(var item in Model.Inventory)
            {
                <img 
                    src="@item.Icon" 
                    class="rounded-2 item item-@item.Level"
                    id="@item.Id"
                    onclick="equipUnequipItem('@item.Id', 'unequip', 'inventory')"
                    title="@item.Name
*** details ***
@(item.HasTaint ? "tainted" : "untainted")
@item.Type.ToLower()
level @item.Level
value @item.Value
*** stats ***
STR @item.Stats.Strength AWA @item.Stats.Awareness
ATH @item.Stats.Athletics CHA @item.Stats.Charm
WIL @item.Stats.Willpower APC @item.Stats.Apcom
ABS @item.Stats.Abstract DEF @item.Stats.Defense
HAR @item.Stats.Harm RES @item.Stats.Resist
FOR @item.Stats.Fortitude HPS @item.Stats.Hitpoints
ACC @item.Stats.Accretion MAN @item.Stats.Mana
GUI @item.Stats.Guile
*** crafts ***
COM @item.Crafts.Combat MER @item.Crafts.Mercantile
ARC @item.Crafts.Arcane TAC @item.Crafts.Tactics
ALC @item.Crafts.Alchemy TRA @item.Crafts.Traveling
PSI @item.Crafts.Psionics SAI @item.Crafts.Sailing
HUN @item.Crafts.Hunting MED @item.Crafts.Medicine
ADV @item.Crafts.Advocacy" />
            }
        </div>
        @* Regalia *@
        <div class="col-3">
            <p class="mb-2">Regalia</p>
            @foreach(var trinket in Model.Regalia)
            {
                <img src="@trinket.Icon"
                        class="rounded-2 item item-@trinket.Level"
                        id="@trinket.Id"
                        onclick="equipUnequipItem('@trinket.Id', 'unequip', 'regalia')"
                        title="@trinket.Name
*** details ***
@(trinket.HasTaint ? "tainted" : "untainted")
@(trinket.IsPermanent ? "can be consumed" : "can only be worn")
@trinket.Type.ToLower()
level @trinket.Level
value @trinket.Value
*** stats
STR @trinket.Stats.Strength AWA @trinket.Stats.Awareness
ATH @trinket.Stats.Athletics CHA @trinket.Stats.Charm
WIL @trinket.Stats.Willpower APC @trinket.Stats.Apcom
ABS @trinket.Stats.Abstract DEF @trinket.Stats.Defense
HAR @trinket.Stats.Harm RES @trinket.Stats.Resist
FOR @trinket.Stats.Fortitude HPS @trinket.Stats.Hitpoints
ACC @trinket.Stats.Accretion MAN @trinket.Stats.Mana
GUI @trinket.Stats.Guile
*** crafts
COM @trinket.Crafts.Combat MER @trinket.Crafts.Mercantile
ARC @trinket.Crafts.Arcane TAC @trinket.Crafts.Tactics
ALC @trinket.Crafts.Alchemy TRA @trinket.Crafts.Traveling
PSI @trinket.Crafts.Psionics SAI @trinket.Crafts.Sailing
HUN @trinket.Crafts.Hunting MED @trinket.Crafts.Medicine
ADV @trinket.Crafts.Advocacy" />
            }
        </div>
        @* Supplies *@
        <div class="col-6">
            <p class="mb-2">Supplies</p>
            @foreach (var item in Model.Supplies.Items)
            {
                <img 
                    src="@item.Icon" 
                    class="rounded-2 item item-@item.Level"
                    id="@item.Id"
                    onclick="equipUnequipItem('@item.Id', 'equip', 'inventory')"
                    title="@item.Name
*** details ***
@(item.HasTaint ? "tainted" : "untainted")
@item.Type.ToLower()
level @item.Level
value @item.Value
*** stats ***
STR @item.Stats.Strength AWA @item.Stats.Awareness
ATH @item.Stats.Athletics CHA @item.Stats.Charm
WIL @item.Stats.Willpower APC @item.Stats.Apcom
ABS @item.Stats.Abstract DEF @item.Stats.Defense
HAR @item.Stats.Harm RES @item.Stats.Resist
FOR @item.Stats.Fortitude HPS @item.Stats.Hitpoints
ACC @item.Stats.Accretion MAN @item.Stats.Mana
GUI @item.Stats.Guile
*** crafts ***
COM @item.Crafts.Combat MER @item.Crafts.Mercantile
ARC @item.Crafts.Arcane TAC @item.Crafts.Tactics
ALC @item.Crafts.Alchemy TRA @item.Crafts.Traveling
PSI @item.Crafts.Psionics SAI @item.Crafts.Sailing
HUN @item.Crafts.Hunting MED @item.Crafts.Medicine
ADV @item.Crafts.Advocacy" />
            }
            @foreach (var trinket in Model.Supplies.Regalia)
            {
                <img src="@trinket.Icon"
                     class="rounded-2 item item-@trinket.Level"
                     id="@trinket.Id"
                     onclick="equipUnequipItem('@trinket.Id', 'equip', 'regalia')"
                     title="@trinket.Name
*** details ***
@(trinket.HasTaint ? "tainted" : "untainted")
@(trinket.IsPermanent ? "can be consumed" : "can only be worn")
@trinket.Type.ToLower()
level @trinket.Level
value @trinket.Value
*** stats
STR @trinket.Stats.Strength AWA @trinket.Stats.Awareness
ATH @trinket.Stats.Athletics CHA @trinket.Stats.Charm
WIL @trinket.Stats.Willpower APC @trinket.Stats.Apcom
ABS @trinket.Stats.Abstract DEF @trinket.Stats.Defense
HAR @trinket.Stats.Harm RES @trinket.Stats.Resist
FOR @trinket.Stats.Fortitude HPS @trinket.Stats.Hitpoints
ACC @trinket.Stats.Accretion MAN @trinket.Stats.Mana
GUI @trinket.Stats.Guile
*** crafts
COM @trinket.Crafts.Combat MER @trinket.Crafts.Mercantile
ARC @trinket.Crafts.Arcane TAC @trinket.Crafts.Tactics
ALC @trinket.Crafts.Alchemy TRA @trinket.Crafts.Traveling
PSI @trinket.Crafts.Psionics SAI @trinket.Crafts.Sailing
HUN @trinket.Crafts.Hunting MED @trinket.Crafts.Medicine
ADV @trinket.Crafts.Advocacy" />
            }
        </div>
    </div>
</div>

<script>
    const equipUnequipItem = (id, action, type) => {
        $("#inventoryActions").show();
        itemSelect(id);

        if (action === "unequip") {
            $("#unequipAction").show();
            $("#equipAction").hide();
            $("#sellAction").hide();
        } else if (action === "equip") {
            $("#unequipAction").hide();
            $("#equipAction").show();
            $("#sellAction").show();
        } 
    }

    const hideInventoryActions = () => {
        $("#inventoryActions").hide();
        $(".item").removeClass("selected");
    }

    const itemSelect = (id) => {
        localStorage.setItem("selectedItem", id);
        $(".item").removeClass("selected");
        $("#" + id).addClass("selected");
    }

    const equipItem = () => {

        const characterId = localStorage.getItem("characterId");
        const sessionId = localStorage.getItem("sessionId");
        const itemId = localStorage.getItem("selectedItem");

        if (!characterId) return;
        $("#spinner").show();
        
        $.ajax({
            type: 'PUT',
            url: '@Url.Action("EquipItem", "Character")',
            contentType: "application/json",
            data: JSON.stringify({
                itemId: itemId,
                characterId: characterId,
                sessionId: sessionId
            }),
            success: function (response) {
                localStorage.setItem("character", JSON.stringify(response));
                location.reload();
            },
            error: function (xhr, status, error) {
                window.location.href = "/character/error?info=" + xhr.responseText;
            }
        });
    }

    const unequipItem = () => {

        const characterId = localStorage.getItem("characterId");
        const sessionId = localStorage.getItem("sessionId");
        const itemId = localStorage.getItem("selectedItem");

        if (!characterId) return;
        $("#spinner").show();

        $.ajax({
            type: 'PUT',
            url: '@Url.Action("UnequipItem", "Character")',
            contentType: "application/json",
            data: JSON.stringify({
                itemId: itemId,
                characterId: characterId,
                sessionId: sessionId
            }),
            success: function (response) {
                localStorage.setItem("character", JSON.stringify(response));
                location.reload();
            },
            error: function (xhr, status, error) {
                window.location.href = "/character/error?info=" + xhr.responseText;
            }
        });
    }

    const sellItem = () => {

        const characterId = localStorage.getItem("characterId");
        const sessionId = localStorage.getItem("sessionId");
        const itemId = localStorage.getItem("selectedItem");

        if (!characterId) return;
        $("#spinner").show();

        $.ajax({
            type: 'PUT',
            url: '@Url.Action("SellItem", "Character")',
            contentType: "application/json",
            data: JSON.stringify({
                itemId: itemId,
                characterId: characterId,
                sessionId: sessionId
            }),
            success: function (response) {
                localStorage.setItem("character", JSON.stringify(response));
                location.reload();
            },
            error: function (xhr, status, error) {
                window.location.href = "/character/error?info=" + xhr.responseText;
            }
        });
    }

    const levelup = (attr) => {

        const characterId = localStorage.getItem("characterId");
        const sessionId = localStorage.getItem("sessionId");

        if (!characterId) return;
        $("#spinner").show();

        $.ajax({
            type: 'PUT',
            url: '@Url.Action("Levelup", "Character")',
            contentType: "application/json",
            data: JSON.stringify({
                characterId: characterId,
                sessionId: sessionId,
                attribute: attr
            }),
            success: function (response) {
                localStorage.setItem("character", JSON.stringify(response));
                location.reload();
            },
            error: function (xhr, status, error) {
                window.location.href = "/character/error?info=" + xhr.responseText;
            }
        });
    }

    const hideLoading = () => {
        $(document).ready(function () {
            $("#spinner").hide(500);
        });
    }

    hideLoading();
</script>